文件：6.9神经网络实战案例：电影评论分类——准备数据（一）
P1：同学们大家好，本节课，我们针对电影评论分类这一神经网络实战案例，继续讲解其准备数据的相关内容。
P2：关于准备数据这部分内容，我们主要介绍其样本数据张量化这一知识点。///（弹出代码框）这里，我们首先从Tensorflow中导入Keras，然后就是load_data，load谁，load是不是就是我们Keras中的数据集imdb啊，这里注意，我们之前开展MNIST手写数字识别分类的时候，我们load的是mnist，而这里我们要开展电影评论的分类，我们load的就不再是mnist了，而是换成了imdb了。好，那我们具体load出的是谁，就是这里的训练集与训练集的标签，以及测试集与测试集的标签。另外，注意，这里面的参数，num_words，从其变量名称可以看出，单词的个数，也就是单词的个数等于10000。那这个参数是什么意思啊？///它表示的就是仅保留数据中的前10000个最常出现的单词，低频单词将被舍弃。这样得到的单词向量数据不会太大，便于处理。大家可以想一下，评论有长有短，而且有高频词和低频词。而除了常用的助词以外的高频词一般都可以代表该评论是好评还是差评，因而，这里，只需要保留评论最常见的大家经常用于评论的10000个单词，是不是就可以了啊。另外，再来看一下所load的数据集，train_data和test_data这两个变量都是评论组成的列表，每条评论又是单词索引组成的列表。train_labels和test_labels都是0和1组成的列表，其中0代表负面差评（negative），1代表正面好评（positive）。
P3：好，下面我们来看一下如何使用字典来实现单词的编码和解码。这里所谓的编码就是将单词映射为一个数字，而解码就是将数字反映射为原先的单词。///（单击出现框）这里的get_word_index这条语句专门给IMDB生成了一个字典word_index，这个字典可以专门用于查单词。///（单击出现大括弧内的两行）我们再来看一下所生成的字典里的形式，由大括号所包含着，其中每一个元素的形式都是前面是个单词，后面是一个数字，单词和数字之间由冒号连接。这就是一个键值对的结构。也就是将单词作为一个索引，通过这个索引查询到其所对应的一个数字。这就是这里查字典的过程。那对于一个整条的评论而言，就是通过将评论中所包含的单词序列，一个一个的输入到字典中进行查询，每一个单词都返回一个整数值，那么这条评论就转换为了一个整数列表。好，这就是字典，那我们还有一个反查的字典，///（单击出现框和大括弧内的两行）也就是给一个整数值，就反查出其原先的单词来。也就是恢复为原先评论的文本的一个过程。
P4：那这里，我们的字典又是怎么生成的呢？就是通过每个单词出现的频率所生成的。比如说，这是一个Corpus语料库，对于这个语料库中的语句，我们统计其里面所有出现的单词的词频，也就是单词出现的次数。比如说，通过统计发现，network这个单词出现了12134次，intention出现了12125次，等等，然后，我们根据每个单词所出现的词频进行一个排序，生产这样一个表格，这里面，这个id序号是从小到大地标注，而词频则是从大到小的排列。而这个表格就是我们形式化的一个字典，就是通过我们的评论所生成的。好，知道了字典的形成方法，///（单击出现training_data和lable）我们再来看一下数据集的形式，对于训练数据training_data，就是这样的一个二阶张量，其中的每一个列表数据都由里面的一对中括号所包含，而每一个中括号对包含的整数值列表对应的就是一条电影评论。那总共有多少条电影评论呢，大家还记得吗？我们之前在收集数据集的时候，是不是将25000条的数据集划分到了训练数据集中，25000条的数据集划分到了测试数据集中啊，所以，我们的这里作为训练数据的电影评论是不是总共有25000条啊，那么training_data中就总共有///25000个列表，那我们再来看这25000个列表中的每个列表的长度都是多少啊？这个不一定吧，因为每条电影的评论有长有短，单词个数都不一样，所对应的数字的个数也都不一样，///（单击出现“长度不一致”）所以列表的长度也都长度不一。好，我们再来看一下training_label，总共有多少个label标签啊，很明显，标签的个数与评论的条数都是一一对应的，总共也是///25000个。这就是我们电影评论训练数据集的特点。
说到这，大家再来思考一下，这样的数据集我们能直接送入到神经网络使用吗？不能！因为这些评论的长度都不一致。大家可以回想一下，我们的MNIST数据集，每张图片在拉平之后，都是一个28*28的784个特征维度的输入，所有数据都拥有相同的数据维度，神经网络的输入层也就拥有固定的神经元节点数，而对于这里的电影评论而言，因为评论的长度不一致，那么每条数据的特征维度也就都不确定，神经网络输入层的节点数也就无法确定，所以，我们还需要对所需要用的数据再进行一步处理，也就是将所有列表的数据转换为固定维度的编码形式。
那么，如何转换呢？我们将在下节课继续给大家介绍，今天的课就讲到这里，谢谢大家。